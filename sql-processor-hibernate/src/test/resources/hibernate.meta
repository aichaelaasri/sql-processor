COLLECTIONS_HIBERNATE(QRY)=
  select p.ID @id, p.NAME_FIRST @name.first, p.NAME_LAST @name.last, p.LASTUPDATEDBY @lastUpdatedBy
  from PERSON p
  where 1=1
  {& p.ID in :idSet(type=h_LONG)}
  {& p.LASTUPDATEDBY in :updatedBySet(type=h_STRING)}
  {& p.NAME_FIRST in :names.firstList(type=h_STRING) | p.NAME_LAST in :names.lastList(type=h_STRING)}
  {#1 order by id}
;

 
HIBERNATE_TYPES(QRY)=
  select t.t_int n_int, t.t_int, t.t_long n_long, t.t_long, t.t_byte n_byte, t.t_byte,
  t.t_short n_short, t.t_short, t.t_float n_float, t.t_float, t.t_double n_double, t.t_double,
  t.t_char n_char, t.t_char, t.t_string,
  t.t_time, t.t_date, t.t_datetime, t.t_timestamp,
  t.t_boolean n_boolean, t.t_boolean,
  t.t_big_integer, t.t_big_decimal,
  t.a_byte an_byte, t.a_byte at_byte, t.a_text,
  t.a_blob, t.a_clob
  from TYPES t
  where id=1
;
HIBERNATE_TYPES(OUT)=
  n_int$n_int(type=h_INTEGER) t_int$t_int(type=h_INTEGER)
  n_long$n_long(type=h_LONG) t_long$t_long(type=h_LONG)
  n_byte$n_byte(type=h_BYTE) t_byte$t_byte(type=h_BYTE)
  n_short$n_short(type=h_SHORT) t_short$t_short(type=h_SHORT)
  n_float$n_float(type=h_FLOAT) t_float$t_float(type=h_FLOAT)
  n_double$n_double(type=h_DOUBLE) t_double$t_double(type=h_DOUBLE)
  n_char$n_char(type=h_CHARACTER) t_char$t_char(type=h_CHARACTER)
  t_string$t_string(type=h_STRING)
  t_time$t_time(type=h_TIME) t_date$t_date(type=h_DATE) t_datetime$t_datetime(type=h_TIMESTAMP) t_timestamp$t_timestamp(type=h_TIMESTAMP)
  n_boolean$n_boolean(type=h_BOOLEAN) t_boolean$t_boolean(type=h_BOOLEAN)
  t_big_integer$t_big_integer(type=h_BIG_INTEGER) t_big_decimal$t_big_decimal(type=h_BIG_DECIMAL)
  an_byte$an_byte(type=h_BINARY) at_byte$at_byte(type=h_WRAPPER_BINARY) a_text$a_text(type=h_TEXT)
  a_blob$a_blob(type=h_BLOB) a_clob$a_clob(type=h_CLOB)
;

HIBERNATE_TYPES_2(QRY)=
  select t_int @n_int(type=h_INTEGER), @t_int(type=h_INTEGER), t_long @n_long(type=h_LONG), @t_long(type=h_LONG),
  t_byte @n_byte(type=h_BYTE), @t_byte(type=h_BYTE), t_short @n_short(type=h_SHORT), @t_short(type=h_SHORT),
  t_float @n_float(type=h_FLOAT), @t_float(type=h_FLOAT), t_double @n_double(type=h_DOUBLE), @t_double(type=h_DOUBLE),
  t_char @n_char(type=h_CHARACTER), @t_char(type=h_CHARACTER), @t_string(type=h_STRING),
  @t_time(type=h_TIME), @t_date(type=h_DATE), @t_datetime(type=h_TIMESTAMP), @t_timestamp(type=h_TIMESTAMP),
  t_boolean @n_boolean(type=h_BOOLEAN), @t_boolean(type=h_BOOLEAN),
  @t_big_integer(type=h_BIG_INTEGER), @t_big_decimal(type=h_BIG_DECIMAL),
  a_byte @an_byte(type=h_BINARY), a_byte @at_byte(type=h_WRAPPER_BINARY), @a_text(type=h_TEXT),
  @a_blob(type=h_BLOB), @a_clob(type=h_CLOB)
  from TYPES
  where id=1
;
 
HIBERNATE_PARAMETERS(QRY)=
  select t.t_int n_int, t.t_int, t.t_long n_long, t.t_long, t.t_byte n_byte, t.t_byte,
  t.t_short n_short, t.t_short, t.t_float n_float, t.t_float, t.t_double n_double, t.t_double,
  t.t_char n_char, t.t_char, t.t_string,
  t.t_time, t.t_date, t.t_datetime, t.t_timestamp,
  t.t_boolean n_boolean, t.t_boolean,
  t.t_big_integer, t.t_big_decimal,
  t.a_byte an_byte, t.a_byte at_byte, t.a_text,
  t.a_blob, t.a_clob
  from TYPES t
  where 1=1
  {& t_int = :t_int(type=h_INTEGER)}
  {& t_long = :t_long(type=h_LONG)}
  {& t_byte = :t_byte(type=h_BYTE)}
  {& a_byte = :an_byte(type=h_BINARY)}
  {& t_short = :t_short(type=h_SHORT)}
  {& t_float = :t_float(type=h_FLOAT)}
  {& t_double = :t_double(type=h_DOUBLE)}
  {& t_char = :t_char(type=h_CHARACTER)}
  {& t_string = :t_string(type=h_STRING)}
  {& t_boolean = :t_boolean(type=h_BOOLEAN)}
  {& t_date = :t_date(type=h_DATE)}
  {& t_time = :t_time(type=h_TIME)}
  {& t_datetime = :t_datetime(type=datetime)}
  {& t_timestamp = :t_timestamp(type=h_TIMESTAMP)}
;
HIBERNATE_PARAMETERS(QRY,INFORMIX)=
  select t.t_int n_int, t.t_int, t.t_long n_long, t.t_long, t.t_byte n_byte, t.t_byte,
  t.t_short n_short, t.t_short, t.t_float n_float, t.t_float, t.t_double n_double, t.t_double,
  t.t_char n_char, t.t_char, t.t_string,
  t.t_time, t.t_date, t.t_datetime, t.t_timestamp,
  t.t_boolean n_boolean, t.t_boolean,
  t.t_big_integer, t.t_big_decimal,
  t.a_byte an_byte, t.a_byte at_byte, t.a_text,
  t.a_blob, t.a_clob
  from TYPES t
  where 1=1
  {& t_int = :t_int(type=h_INTEGER)}
  {& t_long = :t_long(type=h_LONG)}
  {& t_byte = :t_byte(type=h_BYTE)}
  {& t_short = :t_short(type=h_SHORT)}
  {& t_float = :t_float(type=h_FLOAT)}
  {& t_double = :t_double(type=h_DOUBLE)}
  {& t_char = :t_char(type=h_CHARACTER)}
  {& t_string = :t_string(type=h_STRING)}
  {& t_boolean = :t_boolean(type=h_BOOLEAN)}
  {& t_date = :t_date(type=h_DATE)}
  {& t_time = :t_time(type=h_TIME)}
  {& t_datetime = :t_datetime(type=datetime)}
  {& t_timestamp = :t_timestamp(type=h_TIMESTAMP)}
;
HIBERNATE_PARAMETERS(OUT)=
  n_int$n_int(type=h_INTEGER) t_int$t_int(type=h_INTEGER)
  n_long$n_long(type=h_LONG) t_long$t_long(type=h_LONG)
  n_byte$n_byte(type=h_BYTE) t_byte$t_byte(type=h_BYTE)
  n_short$n_short(type=h_SHORT) t_short$t_short(type=h_SHORT)
  n_float$n_float(type=h_FLOAT) t_float$t_float(type=h_FLOAT)
  n_double$n_double(type=h_DOUBLE) t_double$t_double(type=h_DOUBLE)
  n_char$n_char(type=h_CHARACTER) t_char$t_char(type=h_CHARACTER)
  t_string$t_string(type=h_STRING)
  t_time$t_time(type=h_TIME) t_date$t_date(type=h_DATE) t_datetime$t_datetime(type=h_TIMESTAMP) t_timestamp$t_timestamp(type=h_TIMESTAMP)
  n_boolean$n_boolean(type=h_BOOLEAN) t_boolean$t_boolean(type=h_BOOLEAN)
  t_big_integer$t_big_integer(type=h_BIG_INTEGER) t_big_decimal$t_big_decimal(type=h_BIG_DECIMAL)
  an_byte$an_byte(type=h_BINARY) at_byte$at_byte(type=h_WRAPPER_BINARY) a_text$a_text(type=h_TEXT)
  a_blob$a_blob(type=h_BLOB) a_clob$a_clob(type=h_CLOB)
;


INHERITANCE2_BASIC(QRY)=
  select s.ID @id, s.NAME_FIRST @name.first, s.NAME_LAST @name.last, s.LIBRARY @library.id,
  bd.TYPE @billingDetails(discr)type, bd.ID @billingDetails.id, bd.CC_NUMBER @billingDetails.number(type=long),
  bd.CC_EXP_MONTH @billingDetails.expMonth(type=short), bd.CC_EXP_YEAR @billingDetails.expYear(type=short),
  bd.BA_ACCOUNT_NUMBER @billingDetails.accountNumber, bd.BA_BANK_NAME @billingDetails.bankName,
  bd.BA_SWIFT @billingDetails.swift
  from SUBSCRIBER s left join BILLING_DETAILS bd on s.ID = bd.SUBSCRIBER
  {#1 order by s.ID, bd.ID}
;

  