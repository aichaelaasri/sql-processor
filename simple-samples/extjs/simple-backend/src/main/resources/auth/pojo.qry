package org.sample.model.auth {

  import org.hibernate.validator.constraints.NotBlank
  import javax.validation.constraints.NotNull
  import com.fasterxml.jackson.databind.annotation.JsonDeserialize
  import com.fasterxml.jackson.databind.annotation.JsonSerialize
  import ch.ralscha.extdirectspring.generator.ModelAssociation
  import org.sample.web.util.DMYDateTimeDeserializer
  import ch.ralscha.extdirectspring.generator.ModelField
  import ch.ralscha.extdirectspring.generator.Model
  import org.sample.web.util.DMYDateTimeSerializer
  import javax.validation.constraints.Past
  import com.fasterxml.jackson.annotation.JsonIgnore
  import ch.ralscha.extdirectspring.generator.ModelAssociationType


  @Model(value = "SimpleWeb.model.AuthRole", paging = true, readMethod = "simpleService.loadAuthRoles")
  #Static #Conflict
  @JsonIgnore
  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,description,name,version)
  pojo AuthRole {
    #PrimaryKey
    #Index(1)
    id :java.lang.Long
    @NotBlank
    #Required
    name :java.lang.String
    #IsDef
    description :java.lang.String
    @NotNull
    #Version
    version :java.lang.Integer
  }

  @Model(value = "SimpleWeb.model.AuthUser", paging = true, readMethod = "simpleService.loadAuthUsers")
  #Static #Conflict
  @JsonIgnore
  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,lastLogin,username,email,name,password,version)
  pojo AuthUser {
    #PrimaryKey
    #Index(1)
    id :java.lang.Long
    @NotBlank
    #Required
    #Index(2)
    username :java.lang.String
    #IsDef
    password :java.lang.String
    @NotBlank
    #Required
    name :java.lang.String
    #IsDef
    email :java.lang.String
    @ModelField(dateFormat = "d.m.Y")
    @Past
    #Getter #Setter
    @JsonSerialize(using = class :DMYDateTimeSerializer)
    #IsDef
    lastLogin :java.util.Date
    @NotNull
    #Version
    version :java.lang.Integer
    @ModelAssociation(value = HAS_MANY :ModelAssociationType, model = class UserRole)
    #ToInit
    userRoles :java.util.List <UserRole>
  }

  @Model(value = "SimpleWeb.model.UserRole", paging = true, readMethod = "simpleService.loadUserRoles")
  #Static #Conflict
  @JsonIgnore
  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,authUserId,version)
  pojo UserRole {
    #PrimaryKey
    #Index(1)
    id :java.lang.Long
    #Required
    #Index(4)
    authUserId :java.lang.Long
    @ModelAssociation(value = HAS_ONE :ModelAssociationType, model = class AuthRole)
    #ToInit
    #Required
    #Index(5)
    authRole AuthRole
    #Version
    version :java.lang.Integer
  }

  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,authUserId,lastAccess)
  pojo UserSession {
    #PrimaryKey
    #Index(1)
    id :java.lang.Long
    #Required
    #Index(3)
    authUserId :java.lang.Long
    #Required
    lastAccess :java.util.Date
  }
}