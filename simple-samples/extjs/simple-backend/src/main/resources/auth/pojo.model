package org.sample.model.auth {

  import org.hibernate.validator.constraints.NotBlank
  import javax.validation.constraints.NotNull
  import com.fasterxml.jackson.databind.annotation.JsonSerialize
  import ch.ralscha.extdirectspring.generator.ModelAssociation
  import ch.ralscha.extdirectspring.generator.ModelField
  import ch.ralscha.extdirectspring.generator.Model
  import org.sample.web.util.DMYDateTimeSerializer
  import javax.validation.constraints.Past
  import com.fasterxml.jackson.annotation.JsonIgnore
  import ch.ralscha.extdirectspring.generator.ModelAssociationType

//  #Standard
//  @Model(value = "SimpleWeb.model.AuthRole",paging = true,readMethod = "simpleService.loadAuthRoles")
//  #Static
//  @JsonIgnore
//  #Conflict
//  @JsonIgnore
  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,description,name,version)
  #Pojo AuthRole {
    #PrimaryKey
    #Index(1)
    #Attr Long id
    @NotBlank
    #Required
    #Attr String name
    #IsDef
    #Attr String description
    @NotNull
    #Version
    #Attr Integer version
  }

//  #Standard
//  @Model(value = "SimpleWeb.model.AuthUser",paging = true,readMethod = "simpleService.loadAuthUsers")
//  #Static
//  @JsonIgnore
//  #Conflict
//  @JsonIgnore
  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,lastLogin,username,email,name,password,version)
  #Pojo AuthUser {
    #PrimaryKey
    #Index(1)
    #Attr Long id
    @NotBlank
    #Required
    #Index(2)
    #Attr String username
    #IsDef
    #Attr String password
    @NotBlank
    #Required
    #Attr String name
    #IsDef
    #Attr String email
    #Attribute
    @ModelField(dateFormat = "d.m.Y")
    #Attribute
    @Past
    #Getter
    @JsonSerialize(using = typeof(DMYDateTimeSerializer))
    #Setter
    @JsonSerialize(using = typeof(DMYDateTimeSerializer))
    #IsDef
    #Attr java.util.Date lastLogin
    @NotNull
    #Version
    #Attr Integer version
    @ModelAssociation(value = ModelAssociationType.HAS_MANY,model = typeof(UserRole))
    #ToInit
    #Attr java.util.List<UserRole> userRoles
  }

//  #Standard
//  @Model(value = "SimpleWeb.model.UserRole",paging = true,readMethod = "simpleService.loadUserRoles")
//  #Static
//  @JsonIgnore
//  #Conflict
//  @JsonIgnore
  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,authUserId,version)
  #Pojo UserRole {
    #PrimaryKey
    #Index(1)
    #Attr Long id
    #Required
    #Index(4)
    #Attr Long authUserId
    @ModelAssociation(value = ModelAssociationType.HAS_ONE,model = typeof(AuthRole))
    #ToInit
    #Required
    #Index(5)
    #Attr AuthRole authRole
    #Version
    #Attr Integer version
  }

  #Operators
  #Serializable(1)
  #Equals(id)
  #HashCode(id)
  #ToString(id,authUserId,lastAccess)
  #Pojo UserSession {
    #PrimaryKey
    #Index(1)
    #Attr Long id
    #Required
    #Index(3)
    #Attr Long authUserId
    #Required
    #Attr java.util.Date lastAccess
  }
}