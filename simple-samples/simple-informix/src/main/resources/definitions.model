resolve-pojo-on;
database-is-offline;
database-jdbc-driver com.informix.jdbc.IfxDriver; 
database-has-url "jdbc:informix-sqli://localhost:1556/simple:INFORMIXSERVER=popel_ais3;DB_LOCALE=cs_cz.utf8";
database-login-username simple;
database-login-password simple;
database-in-catalog simple;
//database-active-schema simple;
//database-ddl-create informix.ddl; // should be located in the same directory as definitions.qry

// native types
pojogen-generate-wrappers;
// POJO helpers' methods
pojogen-generate-methods toString equals hashCode isDef toInit;
// POJO are serializable
pojogen-implements-interfaces java.io.Serializable;
// can't overwrite existing POJO 
//pojogen-make-it-final;
// ignore SYS tables
//pojogen-ignore-tables sysdomains sysindexes;
// rename enums
pojogen-rename-columns contact_type I0->HOME I1->BUSINESS; 
pojogen-rename-columns person_gender M->MALE F->FEMALE; 
// operators
pojogen-generate-operators;

// use indetity for primary keys
metagen-table-sequence person simple_sequence;
metagen-global-identity common;
metagen-generate-idgenerators;
//metagen-generate-indirect-idgenerators;
// can't overwrite existing META SQL 
//metagen-make-it-final;
// operators
metagen-not-like-columns contact phone_number;

// can't overwrite existing DAO 
//daogen-make-it-final; 
// ignore SYS tables
daogen-ignore-tables sysdomains sysindexes;

is-table contact contact;
is-table person person;
is-procedure anHourBefore an_hour_before;
is-procedure funLong fun_long;
is-procedure newPerson new_person;
is-procedure newPersonRetRs new_person_ret_rs;
is-function anHourBefore an_hour_before;
//function newPersonRetRs new_person_ret_rs;
//metagen-procedure-result-set new_person_ret_rs person;

pojogen-package org.sample.model;
daogen-package org.sample.dao;

is-pojo AnHourBefore org.sample.model.AnHourBefore;
is-pojo Contact org.sample.model.Contact;
is-pojo FunLong org.sample.model.FunLong;
is-pojo NewPerson org.sample.model.NewPerson;
is-pojo NewPersonRetRs org.sample.model.NewPersonRetRs;
is-pojo NewPersonRetRsResult org.sample.model.NewPersonRetRsResult;
is-pojo Person org.sample.model.Person;
