resolve-pojo-on;
new-pojo-validator;
database-is-online;
database-jdbc-driver org.hsqldb.jdbcDriver;
database-has-url "jdbc:hsqldb:mem:jdbccrud";
database-login-username sa;
database-login-password "";
//database-active-schema simplejdbccrud;
database-ddl-create hsqldb.ddl; // should be located in the same directory as definitions.qry

pojogen-generate-wrappers;
// custom type
pojogen-types-for-columns CONTACT PHONE_NUMBER->org.sqlproc.sample.simple.model.PhoneNumber;
// rename
pojogen-rename-columns PERFORMER MEDIAS->WORK;
pojogen-rename-columns LIBRARY PHYSICAL_MEDIAS->CATALOG;
pojogen-rename-columns BOOK ISBN->NEW_ISBN;
pojogen-rename-tables BOOK->NEW_BOOK;
// inheritance
pojogen-inherit-many-to-one BOOK MEDIA_ID->MEDIA->ID;
pojogen-inherit-many-to-one MOVIE MEDIA_ID->MEDIA->ID;
pojogen-inherit-discriminator BILLING_DETAILS TYPE BA->BANK_ACCOUNT->BA_ACCOUNT CC->CREDIT_CARD->CC_NUMBER;
// many-to-one
pojogen-create-many-to-one SUBSCRIBER CONTACT->CONTACT->ID;
pojogen-create-many-to-one PHYSICAL_MEDIA MEDIA->MEDIA->ID;
pojogen-create-many-to-one PHYSICAL_MEDIA LIBRARY->LIBRARY->ID;
// many-to-many
pojogen-table-many-to-many PERSON_LIBRARY ID->MEDIA->LIBRARY;
// one-to-many
pojogen-ignore-one-to-many PERSON ID->PERFORMER->PERSON_ID;
pojogen-ignore-one-to-many BILLING_DETAILS ID->PAYMENT->BILLING_DETAILS;
pojogen-create-one-to-many LIBRARY ID->PHYSICAL_MEDIA->LIBRARY;
// others
pojogen-generate-methods toString equals hashCode isDef toInit index procId;
pojogen-implements-interfaces java.io.Serializable;
pojogen-create-columns PERSON PASSPORT->java.lang.String;
pojogen-not-abstract-tables MEDIA;
//pojogen-make-it-final;

//metagen-global-sequence SEQ1;
metagen-global-identity; // SEL1;
metagen-column-meta-type CONTACT PHONE_NUMBER->phone;
//metagen-statement-meta-type INSERT_CONTACT PHONE_NUMBER->phone;
//metagen-make-it-final;

//daogen-make-it-final;

is-table billingDetails BILLING_DETAILS;
is-table book BOOK;
is-table contact CONTACT;
is-table library LIBRARY;
is-table media MEDIA;
is-table movie MOVIE;
is-table payment PAYMENT;
is-table performer PERFORMER;
is-table person PERSON;
is-table personLibrary PERSON_LIBRARY;
is-table physicalMedia PHYSICAL_MEDIA;
is-table subscriber SUBSCRIBER;

is-pojo BankAccount org.sqlproc.sample.simple.model.BankAccount;
is-pojo BillingDetails org.sqlproc.sample.simple.model.BillingDetails;
is-pojo Contact org.sqlproc.sample.simple.model.Contact;
is-pojo CreditCard org.sqlproc.sample.simple.model.CreditCard;
is-pojo Library org.sqlproc.sample.simple.model.Library;
is-pojo Media org.sqlproc.sample.simple.model.Media;
is-pojo Movie org.sqlproc.sample.simple.model.Movie;
is-pojo NewBook org.sqlproc.sample.simple.model.NewBook;
is-pojo Payment org.sqlproc.sample.simple.model.Payment;
is-pojo Performer org.sqlproc.sample.simple.model.Performer;
is-pojo Person org.sqlproc.sample.simple.model.Person;
is-pojo PersonLibrary org.sqlproc.sample.simple.model.PersonLibrary;
is-pojo PhoneNumber org.sqlproc.sample.simple.model.PhoneNumber;
is-pojo PhysicalMedia org.sqlproc.sample.simple.model.PhysicalMedia;
is-pojo Subscriber org.sqlproc.sample.simple.model.Subscriber;

compress-meta-directives;
pojogen-package org.sqlproc.sample.simple.model;
daogen-package org.sqlproc.sample.simple.dao;
